// Copyright (c) 2022 IndyKite
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        (unknown)
// source: indykite/identity/v1beta1/import.proto

package identityv1beta1

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImportUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*ImportUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// Types that are assignable to HashAlgorithm:
	//	*ImportUsersRequest_Bcrypt
	//	*ImportUsersRequest_StandardScrypt
	//	*ImportUsersRequest_Scrypt
	//	*ImportUsersRequest_HmacMd5
	//	*ImportUsersRequest_HmacSha1
	//	*ImportUsersRequest_HmacSha512
	//	*ImportUsersRequest_HmacSha256
	//	*ImportUsersRequest_Md5
	//	*ImportUsersRequest_Pbkdf2Sha256
	//	*ImportUsersRequest_PbkdfSha1
	//	*ImportUsersRequest_Sha1
	//	*ImportUsersRequest_Sha256
	//	*ImportUsersRequest_Sha512
	HashAlgorithm isImportUsersRequest_HashAlgorithm `protobuf_oneof:"hash_algorithm"`
}

func (x *ImportUsersRequest) Reset() {
	*x = ImportUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUsersRequest) ProtoMessage() {}

func (x *ImportUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUsersRequest.ProtoReflect.Descriptor instead.
func (*ImportUsersRequest) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{0}
}

func (x *ImportUsersRequest) GetUsers() []*ImportUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (m *ImportUsersRequest) GetHashAlgorithm() isImportUsersRequest_HashAlgorithm {
	if m != nil {
		return m.HashAlgorithm
	}
	return nil
}

func (x *ImportUsersRequest) GetBcrypt() *Bcrypt {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_Bcrypt); ok {
		return x.Bcrypt
	}
	return nil
}

func (x *ImportUsersRequest) GetStandardScrypt() *StandardScrypt {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_StandardScrypt); ok {
		return x.StandardScrypt
	}
	return nil
}

func (x *ImportUsersRequest) GetScrypt() *Scrypt {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_Scrypt); ok {
		return x.Scrypt
	}
	return nil
}

func (x *ImportUsersRequest) GetHmacMd5() *HMACMD5 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_HmacMd5); ok {
		return x.HmacMd5
	}
	return nil
}

func (x *ImportUsersRequest) GetHmacSha1() *HMACSHA1 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_HmacSha1); ok {
		return x.HmacSha1
	}
	return nil
}

func (x *ImportUsersRequest) GetHmacSha512() *HMACSHA512 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_HmacSha512); ok {
		return x.HmacSha512
	}
	return nil
}

func (x *ImportUsersRequest) GetHmacSha256() *HMACSHA256 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_HmacSha256); ok {
		return x.HmacSha256
	}
	return nil
}

func (x *ImportUsersRequest) GetMd5() *MD5 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_Md5); ok {
		return x.Md5
	}
	return nil
}

func (x *ImportUsersRequest) GetPbkdf2Sha256() *PBKDF2SHA256 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_Pbkdf2Sha256); ok {
		return x.Pbkdf2Sha256
	}
	return nil
}

func (x *ImportUsersRequest) GetPbkdfSha1() *PBKDFSHA1 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_PbkdfSha1); ok {
		return x.PbkdfSha1
	}
	return nil
}

func (x *ImportUsersRequest) GetSha1() *SHA1 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_Sha1); ok {
		return x.Sha1
	}
	return nil
}

func (x *ImportUsersRequest) GetSha256() *SHA256 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_Sha256); ok {
		return x.Sha256
	}
	return nil
}

func (x *ImportUsersRequest) GetSha512() *SHA512 {
	if x, ok := x.GetHashAlgorithm().(*ImportUsersRequest_Sha512); ok {
		return x.Sha512
	}
	return nil
}

type isImportUsersRequest_HashAlgorithm interface {
	isImportUsersRequest_HashAlgorithm()
}

type ImportUsersRequest_Bcrypt struct {
	Bcrypt *Bcrypt `protobuf:"bytes,2,opt,name=bcrypt,proto3,oneof"`
}

type ImportUsersRequest_StandardScrypt struct {
	StandardScrypt *StandardScrypt `protobuf:"bytes,3,opt,name=standard_scrypt,json=standardScrypt,proto3,oneof"`
}

type ImportUsersRequest_Scrypt struct {
	Scrypt *Scrypt `protobuf:"bytes,4,opt,name=scrypt,proto3,oneof"`
}

type ImportUsersRequest_HmacMd5 struct {
	HmacMd5 *HMACMD5 `protobuf:"bytes,5,opt,name=hmac_md5,json=hmacMd5,proto3,oneof"`
}

type ImportUsersRequest_HmacSha1 struct {
	HmacSha1 *HMACSHA1 `protobuf:"bytes,6,opt,name=hmac_sha1,json=hmacSha1,proto3,oneof"`
}

type ImportUsersRequest_HmacSha512 struct {
	HmacSha512 *HMACSHA512 `protobuf:"bytes,7,opt,name=hmac_sha512,json=hmacSha512,proto3,oneof"`
}

type ImportUsersRequest_HmacSha256 struct {
	HmacSha256 *HMACSHA256 `protobuf:"bytes,8,opt,name=hmac_sha256,json=hmacSha256,proto3,oneof"`
}

type ImportUsersRequest_Md5 struct {
	Md5 *MD5 `protobuf:"bytes,9,opt,name=md5,proto3,oneof"`
}

type ImportUsersRequest_Pbkdf2Sha256 struct {
	Pbkdf2Sha256 *PBKDF2SHA256 `protobuf:"bytes,10,opt,name=pbkdf2_sha256,json=pbkdf2Sha256,proto3,oneof"`
}

type ImportUsersRequest_PbkdfSha1 struct {
	PbkdfSha1 *PBKDFSHA1 `protobuf:"bytes,11,opt,name=pbkdf_sha1,json=pbkdfSha1,proto3,oneof"`
}

type ImportUsersRequest_Sha1 struct {
	Sha1 *SHA1 `protobuf:"bytes,12,opt,name=sha1,proto3,oneof"`
}

type ImportUsersRequest_Sha256 struct {
	Sha256 *SHA256 `protobuf:"bytes,13,opt,name=sha256,proto3,oneof"`
}

type ImportUsersRequest_Sha512 struct {
	Sha512 *SHA512 `protobuf:"bytes,14,opt,name=sha512,proto3,oneof"`
}

func (*ImportUsersRequest_Bcrypt) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_StandardScrypt) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_Scrypt) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_HmacMd5) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_HmacSha1) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_HmacSha512) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_HmacSha256) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_Md5) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_Pbkdf2Sha256) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_PbkdfSha1) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_Sha1) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_Sha256) isImportUsersRequest_HashAlgorithm() {}

func (*ImportUsersRequest_Sha512) isImportUsersRequest_HashAlgorithm() {}

type ImportUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*ImportUsersResponse_ImportUserResult `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ImportUsersResponse) Reset() {
	*x = ImportUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUsersResponse) ProtoMessage() {}

func (x *ImportUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUsersResponse.ProtoReflect.Descriptor instead.
func (*ImportUsersResponse) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{1}
}

func (x *ImportUsersResponse) GetErrors() []*ImportUsersResponse_ImportUserResult {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ImportUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              string              `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Password         *PasswordCredential `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ProviderUserInfo []*UserProvider     `protobuf:"bytes,3,rep,name=provider_user_info,json=providerUserInfo,proto3" json:"provider_user_info,omitempty"`
	Disabled         bool                `protobuf:"varint,4,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *ImportUser) Reset() {
	*x = ImportUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUser) ProtoMessage() {}

func (x *ImportUser) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUser.ProtoReflect.Descriptor instead.
func (*ImportUser) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{2}
}

func (x *ImportUser) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ImportUser) GetPassword() *PasswordCredential {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *ImportUser) GetProviderUserInfo() []*UserProvider {
	if x != nil {
		return x.ProviderUserInfo
	}
	return nil
}

func (x *ImportUser) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

// UserMetadata contains additional metadata associated with a user account.
// Timestamps are in milliseconds since epoch.
type UserMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreationTimestamp  int64 `protobuf:"varint,1,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
	LastLogInTimestamp int64 `protobuf:"varint,2,opt,name=last_log_in_timestamp,json=lastLogInTimestamp,proto3" json:"last_log_in_timestamp,omitempty"`
	// The time at which the user was last active (ID token refreshed), or 0 if
	// the user was never active.
	LastRefreshTimestamp int64 `protobuf:"varint,3,opt,name=last_refresh_timestamp,json=lastRefreshTimestamp,proto3" json:"last_refresh_timestamp,omitempty"`
}

func (x *UserMetadata) Reset() {
	*x = UserMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMetadata) ProtoMessage() {}

func (x *UserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMetadata.ProtoReflect.Descriptor instead.
func (*UserMetadata) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{3}
}

func (x *UserMetadata) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *UserMetadata) GetLastLogInTimestamp() int64 {
	if x != nil {
		return x.LastLogInTimestamp
	}
	return 0
}

func (x *UserMetadata) GetLastRefreshTimestamp() int64 {
	if x != nil {
		return x.LastRefreshTimestamp
	}
	return 0
}

type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{4}
}

func (x *Email) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Email) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type Mobile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile   string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *Mobile) Reset() {
	*x = Mobile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mobile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mobile) ProtoMessage() {}

func (x *Mobile) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mobile.ProtoReflect.Descriptor instead.
func (*Mobile) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{5}
}

func (x *Mobile) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *Mobile) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

// PasswordCredential represent a password for user.
//
// Password can be specified for each user when importing in bulk.
type PasswordCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Uid:
	//	*PasswordCredential_Email
	//	*PasswordCredential_Mobile
	//	*PasswordCredential_UserName
	Uid isPasswordCredential_Uid `protobuf_oneof:"uid"`
	// Types that are assignable to Password:
	//	*PasswordCredential_Value
	//	*PasswordCredential_Hash
	Password isPasswordCredential_Password `protobuf_oneof:"password"`
}

func (x *PasswordCredential) Reset() {
	*x = PasswordCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordCredential) ProtoMessage() {}

func (x *PasswordCredential) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordCredential.ProtoReflect.Descriptor instead.
func (*PasswordCredential) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{6}
}

func (m *PasswordCredential) GetUid() isPasswordCredential_Uid {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (x *PasswordCredential) GetEmail() *Email {
	if x, ok := x.GetUid().(*PasswordCredential_Email); ok {
		return x.Email
	}
	return nil
}

func (x *PasswordCredential) GetMobile() *Mobile {
	if x, ok := x.GetUid().(*PasswordCredential_Mobile); ok {
		return x.Mobile
	}
	return nil
}

func (x *PasswordCredential) GetUserName() string {
	if x, ok := x.GetUid().(*PasswordCredential_UserName); ok {
		return x.UserName
	}
	return ""
}

func (m *PasswordCredential) GetPassword() isPasswordCredential_Password {
	if m != nil {
		return m.Password
	}
	return nil
}

func (x *PasswordCredential) GetValue() string {
	if x, ok := x.GetPassword().(*PasswordCredential_Value); ok {
		return x.Value
	}
	return ""
}

func (x *PasswordCredential) GetHash() *PasswordHash {
	if x, ok := x.GetPassword().(*PasswordCredential_Hash); ok {
		return x.Hash
	}
	return nil
}

type isPasswordCredential_Uid interface {
	isPasswordCredential_Uid()
}

type PasswordCredential_Email struct {
	Email *Email `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type PasswordCredential_Mobile struct {
	Mobile *Mobile `protobuf:"bytes,2,opt,name=mobile,proto3,oneof"`
}

type PasswordCredential_UserName struct {
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3,oneof"`
}

func (*PasswordCredential_Email) isPasswordCredential_Uid() {}

func (*PasswordCredential_Mobile) isPasswordCredential_Uid() {}

func (*PasswordCredential_UserName) isPasswordCredential_Uid() {}

type isPasswordCredential_Password interface {
	isPasswordCredential_Password()
}

type PasswordCredential_Value struct {
	Value string `protobuf:"bytes,4,opt,name=value,proto3,oneof"`
}

type PasswordCredential_Hash struct {
	Hash *PasswordHash `protobuf:"bytes,5,opt,name=hash,proto3,oneof"`
}

func (*PasswordCredential_Value) isPasswordCredential_Password() {}

func (*PasswordCredential_Hash) isPasswordCredential_Password() {}

type PasswordHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PasswordHash []byte `protobuf:"bytes,4,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	Salt         []byte `protobuf:"bytes,5,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *PasswordHash) Reset() {
	*x = PasswordHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordHash) ProtoMessage() {}

func (x *PasswordHash) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordHash.ProtoReflect.Descriptor instead.
func (*PasswordHash) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{7}
}

func (x *PasswordHash) GetPasswordHash() []byte {
	if x != nil {
		return x.PasswordHash
	}
	return nil
}

func (x *PasswordHash) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

// UserProvider represents a user identity provider.
//
// One or more user providers can be specified for each user when importing in bulk.
type UserProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ProviderId  string `protobuf:"bytes,2,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	DisplayName string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	PhotoUrl    string `protobuf:"bytes,5,opt,name=photo_url,json=photoUrl,proto3" json:"photo_url,omitempty"`
}

func (x *UserProvider) Reset() {
	*x = UserProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProvider) ProtoMessage() {}

func (x *UserProvider) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProvider.ProtoReflect.Descriptor instead.
func (*UserProvider) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{8}
}

func (x *UserProvider) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserProvider) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *UserProvider) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserProvider) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserProvider) GetPhotoUrl() string {
	if x != nil {
		return x.PhotoUrl
	}
	return ""
}

type Bcrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Bcrypt) Reset() {
	*x = Bcrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bcrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bcrypt) ProtoMessage() {}

func (x *Bcrypt) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bcrypt.ProtoReflect.Descriptor instead.
func (*Bcrypt) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{9}
}

type StandardScrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockSize        int64 `protobuf:"varint,1,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	DerivedKeyLength int64 `protobuf:"varint,2,opt,name=derived_key_length,json=derivedKeyLength,proto3" json:"derived_key_length,omitempty"`
	MemoryCost       int64 `protobuf:"varint,3,opt,name=memory_cost,json=memoryCost,proto3" json:"memory_cost,omitempty"`
	Parallelization  int64 `protobuf:"varint,4,opt,name=parallelization,proto3" json:"parallelization,omitempty"`
}

func (x *StandardScrypt) Reset() {
	*x = StandardScrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardScrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardScrypt) ProtoMessage() {}

func (x *StandardScrypt) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardScrypt.ProtoReflect.Descriptor instead.
func (*StandardScrypt) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{10}
}

func (x *StandardScrypt) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *StandardScrypt) GetDerivedKeyLength() int64 {
	if x != nil {
		return x.DerivedKeyLength
	}
	return 0
}

func (x *StandardScrypt) GetMemoryCost() int64 {
	if x != nil {
		return x.MemoryCost
	}
	return 0
}

func (x *StandardScrypt) GetParallelization() int64 {
	if x != nil {
		return x.Parallelization
	}
	return 0
}

type Scrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	SaltSeparator []byte `protobuf:"bytes,2,opt,name=salt_separator,json=saltSeparator,proto3" json:"salt_separator,omitempty"`
	Rounds        int64  `protobuf:"varint,3,opt,name=rounds,proto3" json:"rounds,omitempty"`
	MemoryCost    int64  `protobuf:"varint,4,opt,name=memory_cost,json=memoryCost,proto3" json:"memory_cost,omitempty"`
}

func (x *Scrypt) Reset() {
	*x = Scrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scrypt) ProtoMessage() {}

func (x *Scrypt) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scrypt.ProtoReflect.Descriptor instead.
func (*Scrypt) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{11}
}

func (x *Scrypt) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Scrypt) GetSaltSeparator() []byte {
	if x != nil {
		return x.SaltSeparator
	}
	return nil
}

func (x *Scrypt) GetRounds() int64 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

func (x *Scrypt) GetMemoryCost() int64 {
	if x != nil {
		return x.MemoryCost
	}
	return 0
}

type HMACMD5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HMACMD5) Reset() {
	*x = HMACMD5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMACMD5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMACMD5) ProtoMessage() {}

func (x *HMACMD5) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMACMD5.ProtoReflect.Descriptor instead.
func (*HMACMD5) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{12}
}

func (x *HMACMD5) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type HMACSHA1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HMACSHA1) Reset() {
	*x = HMACSHA1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMACSHA1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMACSHA1) ProtoMessage() {}

func (x *HMACSHA1) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMACSHA1.ProtoReflect.Descriptor instead.
func (*HMACSHA1) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{13}
}

func (x *HMACSHA1) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type HMACSHA512 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HMACSHA512) Reset() {
	*x = HMACSHA512{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMACSHA512) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMACSHA512) ProtoMessage() {}

func (x *HMACSHA512) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMACSHA512.ProtoReflect.Descriptor instead.
func (*HMACSHA512) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{14}
}

func (x *HMACSHA512) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type HMACSHA256 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HMACSHA256) Reset() {
	*x = HMACSHA256{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMACSHA256) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMACSHA256) ProtoMessage() {}

func (x *HMACSHA256) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMACSHA256.ProtoReflect.Descriptor instead.
func (*HMACSHA256) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{15}
}

func (x *HMACSHA256) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type MD5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rounds int64 `protobuf:"varint,1,opt,name=rounds,proto3" json:"rounds,omitempty"`
}

func (x *MD5) Reset() {
	*x = MD5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MD5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MD5) ProtoMessage() {}

func (x *MD5) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MD5.ProtoReflect.Descriptor instead.
func (*MD5) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{16}
}

func (x *MD5) GetRounds() int64 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

type PBKDF2SHA256 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rounds int64 `protobuf:"varint,1,opt,name=rounds,proto3" json:"rounds,omitempty"`
}

func (x *PBKDF2SHA256) Reset() {
	*x = PBKDF2SHA256{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBKDF2SHA256) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBKDF2SHA256) ProtoMessage() {}

func (x *PBKDF2SHA256) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBKDF2SHA256.ProtoReflect.Descriptor instead.
func (*PBKDF2SHA256) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{17}
}

func (x *PBKDF2SHA256) GetRounds() int64 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

type PBKDFSHA1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rounds int64 `protobuf:"varint,1,opt,name=rounds,proto3" json:"rounds,omitempty"`
}

func (x *PBKDFSHA1) Reset() {
	*x = PBKDFSHA1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBKDFSHA1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBKDFSHA1) ProtoMessage() {}

func (x *PBKDFSHA1) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBKDFSHA1.ProtoReflect.Descriptor instead.
func (*PBKDFSHA1) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{18}
}

func (x *PBKDFSHA1) GetRounds() int64 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

type SHA1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rounds int64 `protobuf:"varint,1,opt,name=rounds,proto3" json:"rounds,omitempty"`
}

func (x *SHA1) Reset() {
	*x = SHA1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SHA1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SHA1) ProtoMessage() {}

func (x *SHA1) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SHA1.ProtoReflect.Descriptor instead.
func (*SHA1) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{19}
}

func (x *SHA1) GetRounds() int64 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

type SHA256 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rounds int64 `protobuf:"varint,1,opt,name=rounds,proto3" json:"rounds,omitempty"`
}

func (x *SHA256) Reset() {
	*x = SHA256{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SHA256) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SHA256) ProtoMessage() {}

func (x *SHA256) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SHA256.ProtoReflect.Descriptor instead.
func (*SHA256) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{20}
}

func (x *SHA256) GetRounds() int64 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

type SHA512 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rounds int64 `protobuf:"varint,1,opt,name=rounds,proto3" json:"rounds,omitempty"`
}

func (x *SHA512) Reset() {
	*x = SHA512{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SHA512) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SHA512) ProtoMessage() {}

func (x *SHA512) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SHA512.ProtoReflect.Descriptor instead.
func (*SHA512) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{21}
}

func (x *SHA512) GetRounds() int64 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

type ImportUsersResponse_ImportUsersError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ImportUsersResponse_ImportUsersError) Reset() {
	*x = ImportUsersResponse_ImportUsersError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportUsersResponse_ImportUsersError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUsersResponse_ImportUsersError) ProtoMessage() {}

func (x *ImportUsersResponse_ImportUsersError) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUsersResponse_ImportUsersError.ProtoReflect.Descriptor instead.
func (*ImportUsersResponse_ImportUsersError) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ImportUsersResponse_ImportUsersError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ImportUsersResponse_ImportUserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    []byte                                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Error *ImportUsersResponse_ImportUsersError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ImportUsersResponse_ImportUserResult) Reset() {
	*x = ImportUsersResponse_ImportUserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportUsersResponse_ImportUserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportUsersResponse_ImportUserResult) ProtoMessage() {}

func (x *ImportUsersResponse_ImportUserResult) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_identity_v1beta1_import_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportUsersResponse_ImportUserResult.ProtoReflect.Descriptor instead.
func (*ImportUsersResponse_ImportUserResult) Descriptor() ([]byte, []int) {
	return file_indykite_identity_v1beta1_import_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ImportUsersResponse_ImportUserResult) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ImportUsersResponse_ImportUserResult) GetError() *ImportUsersResponse_ImportUsersError {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_indykite_identity_v1beta1_import_proto protoreflect.FileDescriptor

var file_indykite_identity_v1beta1_import_proto_rawDesc = []byte{
	0x0a, 0x26, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69,
	0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x22, 0xc8, 0x07, 0x0a, 0x12, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x64, 0x79,
	0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x62, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69,
	0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x42, 0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x00, 0x52, 0x06, 0x62, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x12, 0x54, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x53, 0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x53, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x64,
	0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x79, 0x70, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x68, 0x6d, 0x61, 0x63, 0x5f,
	0x6d, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x64, 0x79,
	0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x4d, 0x41, 0x43, 0x4d, 0x44, 0x35, 0x48, 0x00, 0x52,
	0x07, 0x68, 0x6d, 0x61, 0x63, 0x4d, 0x64, 0x35, 0x12, 0x42, 0x0a, 0x09, 0x68, 0x6d, 0x61, 0x63,
	0x5f, 0x73, 0x68, 0x61, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e,
	0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x31,
	0x48, 0x00, 0x52, 0x08, 0x68, 0x6d, 0x61, 0x63, 0x53, 0x68, 0x61, 0x31, 0x12, 0x48, 0x0a, 0x0b,
	0x68, 0x6d, 0x61, 0x63, 0x5f, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x4d,
	0x41, 0x43, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x6d, 0x61, 0x63,
	0x53, 0x68, 0x61, 0x35, 0x31, 0x32, 0x12, 0x48, 0x0a, 0x0b, 0x68, 0x6d, 0x61, 0x63, 0x5f, 0x73,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e,
	0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x32,
	0x35, 0x36, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x6d, 0x61, 0x63, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x12, 0x32, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x44, 0x35, 0x48, 0x00, 0x52,
	0x03, 0x6d, 0x64, 0x35, 0x12, 0x4e, 0x0a, 0x0d, 0x70, 0x62, 0x6b, 0x64, 0x66, 0x32, 0x5f, 0x73,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e,
	0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x42, 0x4b, 0x44, 0x46, 0x32, 0x53, 0x48,
	0x41, 0x32, 0x35, 0x36, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x62, 0x6b, 0x64, 0x66, 0x32, 0x53, 0x68,
	0x61, 0x32, 0x35, 0x36, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x62, 0x6b, 0x64, 0x66, 0x5f, 0x73, 0x68,
	0x61, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b,
	0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x42, 0x4b, 0x44, 0x46, 0x53, 0x48, 0x41, 0x31, 0x48, 0x00,
	0x52, 0x09, 0x70, 0x62, 0x6b, 0x64, 0x66, 0x53, 0x68, 0x61, 0x31, 0x12, 0x35, 0x0a, 0x04, 0x73,
	0x68, 0x61, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x64, 0x79,
	0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x48, 0x41, 0x31, 0x48, 0x00, 0x52, 0x04, 0x73, 0x68,
	0x61, 0x31, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53,
	0x48, 0x41, 0x32, 0x35, 0x36, 0x48, 0x00, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12,
	0x3b, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x48, 0x41, 0x35,
	0x31, 0x32, 0x48, 0x00, 0x52, 0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32, 0x42, 0x10, 0x0a, 0x0e,
	0x68, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x22, 0x97,
	0x02, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74,
	0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a,
	0x2c, 0x0a, 0x10, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x79, 0x0a,
	0x10, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x55, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xdc, 0x01, 0x0a, 0x0a, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6e,
	0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x55, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x39, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x3c, 0x0a, 0x06, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x94, 0x02, 0x0a, 0x12, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x12, 0x38, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x64,
	0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69,
	0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x48, 0x61, 0x73, 0x68, 0x48, 0x01, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x42, 0x05, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x47, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x55, 0x72, 0x6c, 0x22, 0x08, 0x0a, 0x06, 0x42, 0x63, 0x72, 0x79, 0x70, 0x74, 0x22, 0xa8, 0x01,
	0x0a, 0x0e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x53, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64, 0x65, 0x72,
	0x69, 0x76, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7a, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x70,
	0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x61,
	0x6c, 0x74, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x07, 0x48, 0x4d, 0x41, 0x43, 0x4d, 0x44, 0x35, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x1c, 0x0a, 0x08, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x31, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x1e, 0x0a, 0x0a, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x1e, 0x0a, 0x0a, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x1d, 0x0a, 0x03, 0x4d, 0x44, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x26,
	0x0a, 0x0c, 0x50, 0x42, 0x4b, 0x44, 0x46, 0x32, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x23, 0x0a, 0x09, 0x50, 0x42, 0x4b, 0x44, 0x46, 0x53,
	0x48, 0x41, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x1e, 0x0a, 0x04, 0x53,
	0x48, 0x41, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x06, 0x53,
	0x48, 0x41, 0x32, 0x35, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x20, 0x0a,
	0x06, 0x53, 0x48, 0x41, 0x35, 0x31, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x42,
	0x83, 0x02, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x42, 0x0b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x64,
	0x79, 0x6b, 0x69, 0x74, 0x65, 0x2f, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2d, 0x73, 0x64, 0x6b,
	0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65,
	0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x3b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0xa2, 0x02, 0x03, 0x49, 0x49, 0x58, 0xaa, 0x02, 0x19, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69,
	0x74, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0xca, 0x02, 0x19, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x5c, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2,
	0x02, 0x25, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x5c, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1b, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69,
	0x74, 0x65, 0x3a, 0x3a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_indykite_identity_v1beta1_import_proto_rawDescOnce sync.Once
	file_indykite_identity_v1beta1_import_proto_rawDescData = file_indykite_identity_v1beta1_import_proto_rawDesc
)

func file_indykite_identity_v1beta1_import_proto_rawDescGZIP() []byte {
	file_indykite_identity_v1beta1_import_proto_rawDescOnce.Do(func() {
		file_indykite_identity_v1beta1_import_proto_rawDescData = protoimpl.X.CompressGZIP(file_indykite_identity_v1beta1_import_proto_rawDescData)
	})
	return file_indykite_identity_v1beta1_import_proto_rawDescData
}

var file_indykite_identity_v1beta1_import_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_indykite_identity_v1beta1_import_proto_goTypes = []interface{}{
	(*ImportUsersRequest)(nil),  // 0: indykite.identity.v1beta1.ImportUsersRequest
	(*ImportUsersResponse)(nil), // 1: indykite.identity.v1beta1.ImportUsersResponse
	(*ImportUser)(nil),          // 2: indykite.identity.v1beta1.ImportUser
	(*UserMetadata)(nil),        // 3: indykite.identity.v1beta1.UserMetadata
	(*Email)(nil),               // 4: indykite.identity.v1beta1.Email
	(*Mobile)(nil),              // 5: indykite.identity.v1beta1.Mobile
	(*PasswordCredential)(nil),  // 6: indykite.identity.v1beta1.PasswordCredential
	(*PasswordHash)(nil),        // 7: indykite.identity.v1beta1.PasswordHash
	(*UserProvider)(nil),        // 8: indykite.identity.v1beta1.UserProvider
	(*Bcrypt)(nil),              // 9: indykite.identity.v1beta1.Bcrypt
	(*StandardScrypt)(nil),      // 10: indykite.identity.v1beta1.StandardScrypt
	(*Scrypt)(nil),              // 11: indykite.identity.v1beta1.Scrypt
	(*HMACMD5)(nil),             // 12: indykite.identity.v1beta1.HMACMD5
	(*HMACSHA1)(nil),            // 13: indykite.identity.v1beta1.HMACSHA1
	(*HMACSHA512)(nil),          // 14: indykite.identity.v1beta1.HMACSHA512
	(*HMACSHA256)(nil),          // 15: indykite.identity.v1beta1.HMACSHA256
	(*MD5)(nil),                 // 16: indykite.identity.v1beta1.MD5
	(*PBKDF2SHA256)(nil),        // 17: indykite.identity.v1beta1.PBKDF2SHA256
	(*PBKDFSHA1)(nil),           // 18: indykite.identity.v1beta1.PBKDFSHA1
	(*SHA1)(nil),                // 19: indykite.identity.v1beta1.SHA1
	(*SHA256)(nil),              // 20: indykite.identity.v1beta1.SHA256
	(*SHA512)(nil),              // 21: indykite.identity.v1beta1.SHA512
	(*ImportUsersResponse_ImportUsersError)(nil), // 22: indykite.identity.v1beta1.ImportUsersResponse.ImportUsersError
	(*ImportUsersResponse_ImportUserResult)(nil), // 23: indykite.identity.v1beta1.ImportUsersResponse.ImportUserResult
}
var file_indykite_identity_v1beta1_import_proto_depIdxs = []int32{
	2,  // 0: indykite.identity.v1beta1.ImportUsersRequest.users:type_name -> indykite.identity.v1beta1.ImportUser
	9,  // 1: indykite.identity.v1beta1.ImportUsersRequest.bcrypt:type_name -> indykite.identity.v1beta1.Bcrypt
	10, // 2: indykite.identity.v1beta1.ImportUsersRequest.standard_scrypt:type_name -> indykite.identity.v1beta1.StandardScrypt
	11, // 3: indykite.identity.v1beta1.ImportUsersRequest.scrypt:type_name -> indykite.identity.v1beta1.Scrypt
	12, // 4: indykite.identity.v1beta1.ImportUsersRequest.hmac_md5:type_name -> indykite.identity.v1beta1.HMACMD5
	13, // 5: indykite.identity.v1beta1.ImportUsersRequest.hmac_sha1:type_name -> indykite.identity.v1beta1.HMACSHA1
	14, // 6: indykite.identity.v1beta1.ImportUsersRequest.hmac_sha512:type_name -> indykite.identity.v1beta1.HMACSHA512
	15, // 7: indykite.identity.v1beta1.ImportUsersRequest.hmac_sha256:type_name -> indykite.identity.v1beta1.HMACSHA256
	16, // 8: indykite.identity.v1beta1.ImportUsersRequest.md5:type_name -> indykite.identity.v1beta1.MD5
	17, // 9: indykite.identity.v1beta1.ImportUsersRequest.pbkdf2_sha256:type_name -> indykite.identity.v1beta1.PBKDF2SHA256
	18, // 10: indykite.identity.v1beta1.ImportUsersRequest.pbkdf_sha1:type_name -> indykite.identity.v1beta1.PBKDFSHA1
	19, // 11: indykite.identity.v1beta1.ImportUsersRequest.sha1:type_name -> indykite.identity.v1beta1.SHA1
	20, // 12: indykite.identity.v1beta1.ImportUsersRequest.sha256:type_name -> indykite.identity.v1beta1.SHA256
	21, // 13: indykite.identity.v1beta1.ImportUsersRequest.sha512:type_name -> indykite.identity.v1beta1.SHA512
	23, // 14: indykite.identity.v1beta1.ImportUsersResponse.errors:type_name -> indykite.identity.v1beta1.ImportUsersResponse.ImportUserResult
	6,  // 15: indykite.identity.v1beta1.ImportUser.password:type_name -> indykite.identity.v1beta1.PasswordCredential
	8,  // 16: indykite.identity.v1beta1.ImportUser.provider_user_info:type_name -> indykite.identity.v1beta1.UserProvider
	4,  // 17: indykite.identity.v1beta1.PasswordCredential.email:type_name -> indykite.identity.v1beta1.Email
	5,  // 18: indykite.identity.v1beta1.PasswordCredential.mobile:type_name -> indykite.identity.v1beta1.Mobile
	7,  // 19: indykite.identity.v1beta1.PasswordCredential.hash:type_name -> indykite.identity.v1beta1.PasswordHash
	22, // 20: indykite.identity.v1beta1.ImportUsersResponse.ImportUserResult.error:type_name -> indykite.identity.v1beta1.ImportUsersResponse.ImportUsersError
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_indykite_identity_v1beta1_import_proto_init() }
func file_indykite_identity_v1beta1_import_proto_init() {
	if File_indykite_identity_v1beta1_import_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_indykite_identity_v1beta1_import_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mobile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bcrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardScrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HMACMD5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HMACSHA1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HMACSHA512); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HMACSHA256); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MD5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBKDF2SHA256); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBKDFSHA1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SHA1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SHA256); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SHA512); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportUsersResponse_ImportUsersError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_identity_v1beta1_import_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportUsersResponse_ImportUserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_indykite_identity_v1beta1_import_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ImportUsersRequest_Bcrypt)(nil),
		(*ImportUsersRequest_StandardScrypt)(nil),
		(*ImportUsersRequest_Scrypt)(nil),
		(*ImportUsersRequest_HmacMd5)(nil),
		(*ImportUsersRequest_HmacSha1)(nil),
		(*ImportUsersRequest_HmacSha512)(nil),
		(*ImportUsersRequest_HmacSha256)(nil),
		(*ImportUsersRequest_Md5)(nil),
		(*ImportUsersRequest_Pbkdf2Sha256)(nil),
		(*ImportUsersRequest_PbkdfSha1)(nil),
		(*ImportUsersRequest_Sha1)(nil),
		(*ImportUsersRequest_Sha256)(nil),
		(*ImportUsersRequest_Sha512)(nil),
	}
	file_indykite_identity_v1beta1_import_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*PasswordCredential_Email)(nil),
		(*PasswordCredential_Mobile)(nil),
		(*PasswordCredential_UserName)(nil),
		(*PasswordCredential_Value)(nil),
		(*PasswordCredential_Hash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_indykite_identity_v1beta1_import_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_indykite_identity_v1beta1_import_proto_goTypes,
		DependencyIndexes: file_indykite_identity_v1beta1_import_proto_depIdxs,
		MessageInfos:      file_indykite_identity_v1beta1_import_proto_msgTypes,
	}.Build()
	File_indykite_identity_v1beta1_import_proto = out.File
	file_indykite_identity_v1beta1_import_proto_rawDesc = nil
	file_indykite_identity_v1beta1_import_proto_goTypes = nil
	file_indykite_identity_v1beta1_import_proto_depIdxs = nil
}
